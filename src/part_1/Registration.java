 /*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package part_1;


import javax.swing.JOptionPane;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
/**
 *
 * @author onkgopotsehume
 */
public class Registration extends javax.swing.JFrame {
   String storedUsername;
   String storedPassword;
    /**
     * Creates new form Registration
     */
    public Registration() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        USERNAME = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        CELLPHONENUMBER = new javax.swing.JTextField();
        FIRSTNAME = new javax.swing.JTextField();
        LASTNAME = new javax.swing.JTextField();
        txt_submit = new javax.swing.JButton();
        PASSWORD = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("USERNAME");

        jLabel2.setText("CELLPHONE NUMBER");

        jLabel3.setText("FIRST NAME");

        jLabel4.setText("LAST NAME");

        jLabel5.setText("PASSWORD");

        CELLPHONENUMBER.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CELLPHONENUMBERActionPerformed(evt);
            }
        });

        FIRSTNAME.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FIRSTNAMEActionPerformed(evt);
            }
        });

        LASTNAME.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LASTNAMEActionPerformed(evt);
            }
        });

        txt_submit.setText("submit");
        txt_submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_submitActionPerformed(evt);
            }
        });

        PASSWORD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PASSWORDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(66, 66, 66)
                        .addComponent(FIRSTNAME))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CELLPHONENUMBER))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 3, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(67, 67, 67)
                        .addComponent(USERNAME, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(68, 68, 68)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LASTNAME)
                            .addComponent(PASSWORD))))
                .addGap(78, 78, 78))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txt_submit)
                .addGap(60, 60, 60))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(USERNAME, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(CELLPHONENUMBER, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(FIRSTNAME, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(LASTNAME, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(PASSWORD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addComponent(txt_submit)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CELLPHONENUMBERActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CELLPHONENUMBERActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CELLPHONENUMBERActionPerformed

    private void FIRSTNAMEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FIRSTNAMEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FIRSTNAMEActionPerformed

    private void LASTNAMEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LASTNAMEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LASTNAMEActionPerformed

    private void txt_submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_submitActionPerformed
        // TODO add your handling code here:
        handleRegistration();
    }//GEN-LAST:event_txt_submitActionPerformed

    private void PASSWORDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PASSWORDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PASSWORDActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
new Registration().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CELLPHONENUMBER;
    private javax.swing.JTextField FIRSTNAME;
    private javax.swing.JTextField LASTNAME;
    private javax.swing.JPasswordField PASSWORD;
    private javax.swing.JTextField USERNAME;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JButton txt_submit;
    // End of variables declaration//GEN-END:variables

    private void handleRegistration() {
        //throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    String username = USERNAME.getText();
    String cellphonenumber = CELLPHONENUMBER.getText();
    String firstname = FIRSTNAME.getText();
    String lastname = LASTNAME.getText();
    String password = new String(PASSWORD.getPassword());
    
    String registrationMessage = registerUser(username, password, cellphonenumber, firstname, lastname);
    JOptionPane.showMessageDialog(Registration.this,registrationMessage,"registration status",JOptionPane.INFORMATION_MESSAGE);
    if (registrationMessage.equals("Registration successful!")){
        
        dispose();
        System.out.println("stored username"+username+""+"stored password:"+password);
        
        
    }
    }

   private String registerUser(String username, String password, String cellphonenumber, String firstname, String lastname) {
      
   if(!checkusername(username)){
       return "USERNAME must contain an underscore (_) and be no more than 5 characters long !";
   }
       
       if (!checkpasswordcomplexity(password)){
       return "password must be at least 8 characters long and contain at least one uppercase letter, one lowercase letter, one digit, one special character";
       
   }
   if(!iscellphonevalid(cellphonenumber)){
       return "cellphone number is incorrectly formated or does not contain an international code, please try the number again";
       
   }
   //implement actual registration logic
   //for demonstration, assume registration is successful
   return "Registration successful";
   
   }
   private boolean checkusername(String username){
       return username.contains("_") && username.length()<=5;
   }
   
   

    private boolean checkpasswordcomplexity(String password) {
    return password.length() >= 8
&& password.matches(".*[A-Z].*")
&& password.matches(".*[a-z].*")
&& password.matches(".*\\d.*")
&& password.matches(".*[!@#$%^&*()-_=+\\|[{]};:'\",<.>/?`~].*");

    }
private boolean iscellphonevalid(String cellphonenumber){
String regex = "^\\ +(1-9)[0-9](0-2)[0-9](9,10)$";
Pattern pattern=Pattern.compile(regex);
Matcher matcher = pattern.matcher(cellphonenumber);
return matcher.matches();
}
public boolean checkLOGINCredentials(String username, String password){
return username.equals(storedUsername) && password.equals(storedPassword);
}
}
